{"version":3,"sources":["context.js","Components/contacts/Contact.js","Components/contacts/Contacts.js","Components/layout/TextInputGroup.js","Components/contacts/AddContact.js","Components/contacts/EditContact.js","Components/layout/Header.js","Components/pages/About.js","Components/pages/NotFound.js","Components/test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","map","Provider","dispatch","setState","axios","get","res","this","data","value","props","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","a","delete","name","email","phone","console","log","className","onClick","style","fontSize","cursor","bind","class","float","color","to","marginRight","Contacts","Fragment","TextInputGroup","label","placeholder","onChange","error","htmlFor","classnames","AddContact","errors","onSubmit","e","preventDefault","newContact","post","history","push","target","EditContact","updContact","match","params","put","res1","Header","branding","href","defaultProps","About","Test","title","body","fetch","then","response","json","App","render","exact","path","component","NotFound","Boolean","window","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.2a6c27d6.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nconst  Context =React.createContext();\r\nconst reducer= (state, action) => {\r\n    switch (action.type) {\r\n      case \"DELETE_CONTACT\":\r\n        return {\r\n          ...state,\r\n          contacts: state.contacts.filter(\r\n            (contact) => contact.id !== action.payload\r\n          ),\r\n        };\r\n      case \"ADD_CONTACT\":\r\n        return {\r\n          ...state,\r\n          contacts: [action.payload, ...state.contacts],\r\n        };\r\n      case \"UPDATE_CONTACT\":\r\n        return {\r\n          ...state,\r\n          contacts: state.contacts.map(contact=>\r\n          contact.id===action.payload.id ? contact= action.payload : contact)\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n}\r\nexport class Provider extends Component{\r\n    state={\r\n        contacts: [],\r\n        dispatch: action => this.setState(state=>\r\n            reducer(state,action))\r\n    };\r\n   //With the use of promises :\r\n    /*componentDidMount()\r\n    {\r\n        axios.get(\"https://jsonplaceholder.typicode.com/users\")\r\n        .then(res=>this.setState(\r\n            {\r\n                contacts: res.data\r\n            }\r\n        ));\r\n    }*/\r\n    //With the use of async/await :\r\n    async componentDidMount()\r\n    {\r\n        const res = await axios\r\n        .get(\"https://jsonplaceholder.typicode.com/users\");\r\n\r\n        this.setState({\r\n            contacts: res.data\r\n        });\r\n\r\n\r\n    }\r\n    render()\r\n    {\r\n        return (\r\n            <Context.Provider value={this.state}>\r\n                {this.props.children}\r\n            </Context.Provider>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport const Consumer = Context.Consumer;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Consumer} from '../../context';\r\nimport axios from 'axios';\r\nimport {Link} from 'react-router-dom';\r\nclass Contact extends Component {\r\n  state = {\r\n    showContactInfo: false,\r\n  };\r\n  //This is with the use of promises :\r\n  /*onDeleteClick=(id,dispatch)=>{\r\n    axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`)\r\n   .then(res=> dispatch({type: 'DELETE_CONTACT',payload: id}));\r\n  };*/\r\n  //This is with the new concept of async and await :\r\n  onDeleteClick= async (id,dispatch)=>{\r\n   await axios\r\n      .delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n    dispatch({ type: \"DELETE_CONTACT\", payload: id });\r\n  };\r\n  render() {\r\n    const { id, name, email, phone } = this.props;\r\n    console.log(this.props);\r\n    const { showContactInfo } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card card-body mb-3\">\r\n              <h4>\r\n                {name}{\" \"}\r\n                <i\r\n                  onClick={() =>\r\n                    this.setState({\r\n                      showContactInfo: !this.state.showContactInfo,\r\n                    })\r\n                  }\r\n                  className=\"fas fa-caret-down\"\r\n                  style={{ fontSize: 15, cursor: \"pointer\" }}\r\n                />\r\n                <i\r\n                  onClick={this.onDeleteClick.bind(this, id, dispatch)}\r\n                  class=\"fas fa-times\"\r\n                  style={{ cursor: \"pointer\", float: \"right\", color: \"red\" }}\r\n                />\r\n                <Link to={`contact/editContact/${id}`}>\r\n                  <i\r\n                    class=\"fas fa-pencil-alt\"\r\n                    style={{ cursor: \"pointer\", float: \"right\", color: \"black\", marginRight:\"1.3rem\" }}\r\n                  />\r\n                </Link>\r\n              </h4>\r\n              {showContactInfo ? (\r\n                <ul className=\"list-group\">\r\n                  <li className=\"list-group-item\">{email}</li>\r\n                  <li className=\"list-group-item\">{phone}</li>\r\n                </ul>\r\n              ) : null}\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\nContact.propTypes={\r\n    name : PropTypes.string.isRequired,\r\n    email: PropTypes.string.isRequired,\r\n    phone: PropTypes.string.isRequired\r\n  };\r\nexport default Contact;","import React, { Component } from 'react';\r\nimport Contact from './Contact';\r\nimport {Consumer} from '../../context';\r\nclass Contacts extends Component {\r\n    render() {\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const { contacts }=value;\r\n                    return (\r\n                        <React.Fragment>\r\n                <h1 className=\"display-4 mb-2\"><span className=\"text-danger\">Contact</span> List</h1>\r\n\r\n                        {contacts.map(contact =>\r\n                    <Contact name={contact.name} email={contact.email} phone={contact.phone} id={contact.id} />\r\n                )}\r\n                </React.Fragment>\r\n                );\r\n                }}\r\n                </Consumer>\r\n        );\r\n     }\r\n}\r\nexport default Contacts;\r\n//deleteClickHandler={this.deleteContact.bind(this, contact.id)}\r\n/* deleteContact=id=>{\r\n      const { contacts }=this.state;\r\n      const newContacts= contacts.filter(contact=>\r\n          contact.id!==id);\r\n      this.setState({\r\n          contacts:newContacts\r\n      });\r\n      };*/","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\nconst TextInputGroup=({\r\n    label,\r\n    name,\r\n    value,\r\n    placeholder,\r\n    type,\r\n    onChange,\r\n    error\r\n})=> {\r\n    return (\r\n      <div className=\"form-group\">\r\n        <label htmlFor={name}>{label}</label>\r\n\r\n        <input\r\n          type={type}\r\n          value={value}\r\n          className={classnames(\"form-control form-control-lg\", {\r\n            \"is-invalid\": error,\r\n          })}\r\n          placeholder={placeholder}\r\n          name={name}\r\n          onChange={onChange}\r\n        />\r\n        {error && <div className=\"invalid-feedback\">{error}</div>}\r\n      </div>\r\n    );\r\n}\r\nTextInputGroup.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  error: PropTypes.string\r\n};\r\n\r\nexport default TextInputGroup;","import React, { Component } from 'react'\r\nimport {Consumer} from '../../context';\r\n//import {v4 as uuidv4} from 'uuid';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport axios from 'axios';\r\nclass AddContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors:{}\r\n  };\r\n  onSubmit = async (dispatch, e) => {\r\n                                e.preventDefault();\r\n\r\n                                const { name, email, phone } = this.state;\r\n\r\n                                if (name === \"\") {\r\n                                  this.setState({\r\n                                    errors: { name: \"Name is Required\" },\r\n                                  });\r\n                                  return;\r\n                                }\r\n                                if (email === \"\") {\r\n                                  this.setState({\r\n                                    errors: { email: \"Email is Required\" },\r\n                                  });\r\n                                  return;\r\n                                }\r\n                                if (phone === \"\") {\r\n                                  this.setState({\r\n                                    errors: {\r\n                                      phone: \"Phone Number is Required\",\r\n                                    },\r\n                                  });\r\n                                  return;\r\n                                }\r\n\r\n                                const newContact = {\r\n                                  //id: uuidv4(),\r\n                                  name,\r\n                                  email,\r\n                                  phone,\r\n                                };\r\n                                //This is added after the concept of http request concept prior it was only dispatch({ type: \"ADD_CONTACT\", payload: newContact });\r\n                                //This is added with the concept of promises:\r\n                                /*axios\r\n                                  .post(\r\n                                    \"https://jsonplaceholder.typicode.com/users\",newContact)\r\n                                  .then((res) =>\r\n                                    dispatch({\r\n                                      type: \"ADD_CONTACT\",\r\n                                      payload: res.data,\r\n                                    }));*/\r\n                                //This is added with the new concept of async/await:\r\n                                const res= await axios.post(\r\n                                    \"https://jsonplaceholder.typicode.com/users\",newContact);\r\n                                      dispatch({\r\n                                      type: \"ADD_CONTACT\",\r\n                                      payload: res.data,\r\n                                    });\r\n                                  \r\n                                // Clearing State\r\n                                this.setState({\r\n                                  name: \"\",\r\n                                  email: \"\",\r\n                                  phone: \"\",\r\n                                  errors: {},\r\n                                });\r\n                                this.props.history.push(\"/\");\r\n                              };\r\n  onChange = (e) => this.setState({ [e.target.name]: e.target.value });\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Add Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    value={name}\r\n                    placeholder=\"Enter Name\"\r\n                    type=\"text\"\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    value={email}\r\n                    placeholder=\"Enter Email\"\r\n                    type=\"email\"\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Phone Number\"\r\n                    name=\"phone\"\r\n                    value={phone}\r\n                    placeholder=\"Enter Phone Number\"\r\n                    type=\"text\"\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Add Contact\"\r\n                    className=\"btn btn-light btn-block\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\nexport default AddContact;","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\n//import {v4 as uuidv4} from 'uuid';\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\nimport axios from \"axios\";\r\nclass EditContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: {},\r\n  };\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone } = this.state;\r\n\r\n    if (name === \"\") {\r\n      this.setState({\r\n        errors: { name: \"Name is Required\" },\r\n      });\r\n      return;\r\n    }\r\n    if (email === \"\") {\r\n      this.setState({\r\n        errors: { email: \"Email is Required\" },\r\n      });\r\n      return;\r\n    }\r\n    if (phone === \"\") {\r\n      this.setState({\r\n        errors: {\r\n          phone: \"Phone Number is Required\",\r\n        },\r\n      });\r\n      return;\r\n    }\r\n    const updContact = {\r\n      name,\r\n      email,\r\n      phone\r\n    }\r\n    const {id} =this.props.match.params;\r\n    const res1= await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`,updContact);\r\n     dispatch({\r\n       type: \"UPDATE_CONTACT\",\r\n       payload: res1.data,\r\n     });\r\n                                  \r\n\r\n    // Clearing State\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      errors: {},\r\n    });\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  async componentDidMount()\r\n  {\r\n    const id=this.props.match.params.id;\r\n    const res=await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`)\r\n    this.setState({\r\n      name: res.data.name,\r\n      email: res.data.email,\r\n      phone: res.data.phone\r\n    });\r\n  }\r\n  onChange = (e) => this.setState({ [e.target.name]: e.target.value });\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Edit Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    value={name}\r\n                    placeholder=\"Enter Name\"\r\n                    type=\"text\"\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    value={email}\r\n                    placeholder=\"Enter Email\"\r\n                    type=\"email\"\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Phone Number\"\r\n                    name=\"phone\"\r\n                    value={phone}\r\n                    placeholder=\"Enter Phone Number\"\r\n                    type=\"text\"\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Update Contact\"\r\n                    className=\"btn btn-light btn-block\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\nexport default EditContact;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Link} from 'react-router-dom';\r\n/*function Header() {\r\n    return (\r\n        <div>\r\n            <h1>Contact Manager</h1>\r\n        </div>\r\n    )\r\n}*/\r\nconst Header= (props) =>{\r\n    const {branding}=props;\r\n    return (\r\n      /*  <div>\r\n            <h1>{branding}</h1>\r\n        </div> */\r\n          <nav className=\"navbar navbar-expand-styleMedia navbar-dark bg-danger mb-3 py-0\">\r\n      <div className=\"container\">\r\n          <a href=\"/\" className=\"navbar-brand\">{branding}</a>\r\n          <div>\r\n              <ul className=\"navbar-nav mr-auto\">\r\n                    <li className=\"nav-item\">\r\n                        <Link to=\"/\" className=\"nav-link\"><i className=\"fas fa-home\"></i> Home</Link>\r\n                    </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/contact/addContact\" className=\"nav-link\"><i className=\"fas fa-plus\"></i> Add Contact</Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/about\" className=\"nav-link\"><i className=\"fas fa-question\"></i> About</Link>\r\n                        </li>\r\n\r\n                  </ul>\r\n              </div>\r\n        </div>\r\n    </nav>\r\n    )\r\n}\r\nHeader.defaultProps={\r\n    branding:'My App'\r\n};\r\nHeader.propTypes={\r\n    branding : PropTypes.string.isRequired\r\n};\r\nexport default Header;","import React from 'react'\r\n\r\nexport default function About(props) {\r\n    return (\r\n        <div>\r\n           \r\n            <h1 className=\"display-4\">Contact Manager App</h1>\r\n            <p className=\"lead\">Simple Contact Management App to help you out to save and manage contacts</p>\r\n            <h2>Version 1.0.0</h2>\r\n            <h1>{props.match.params.id}</h1>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default () => {\r\n    return (\r\n        <div>\r\n                <h1 className=\"display-4\"><span className=\"text-danger\">404</span> Page Not Found</h1>\r\n            <p className=\"lead\">Sorry, that page does not exist. Please check for the correct URL</p>\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nclass Test extends Component {\r\n   state={\r\n   title:'',\r\n   body:'',\r\n   name:'',\r\n   phone:'',\r\n   email:''\r\n   };\r\n    componentDidMount()\r\n    {\r\n       /* fetch('https://jsonplaceholder.typicode.com/users')\r\n            .then(response => response.json())\r\n            .then(data => this.setState({\r\n                name: data.name,\r\n                email: data.email,\r\n                phone: data.phone\r\n            }));*/\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n            .then(response => response.json())\r\n            .then(data =>console.log(data.name))\r\n        }\r\n   /* componentWillMount()\r\n    {\r\n    }\r\n    componentDidUpdate()\r\n    {\r\n    }\r\n    componentWillUpdate()\r\n    {\r\n    }\r\n    componentWillReceiveProps(nextProps,nextState)\r\n    {\r\n    }*/\r\n    render() {\r\n        const {name,email,phone}= this.state;\r\n        return (\r\n            \r\n            <div>\r\n                <h5 className=\"\">Life Cycle Methods</h5>\r\n                <h1>{name}</h1>\r\n        <p>{email} { phone}</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Test;\r\n","import React from 'react';\nimport { HashRouter as Router, Route, Switch} from 'react-router-dom';\nimport Contacts from './Components/contacts/Contacts';\nimport './App.css';\nimport { render } from '@testing-library/react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {Provider} from './context';\nimport AddContact from './Components/contacts/AddContact';\nimport EditContact from \"./Components/contacts/EditContact\";\nimport Header from \"./Components/layout/Header\";\nimport About from \"./Components/pages/About\";\nimport NotFound from \"./Components/pages/NotFound\";\nimport Test from './Components/test/Test';\n\nfunction App() {\n  render()\n  {\n  return (\n    <Provider>\n      <Router>\n        <div className=\"App\">\n          <Header branding=\"Contact Manager\" />\n          <div className=\"container\">\n            <Switch>\n              <Route exact path=\"/\" component={Contacts} />\n              <Route exact path=\"/contact/addContact\" component={AddContact} />\n              <Route exact path=\"/contact/editContact/:id\" component={EditContact} />\n              <Route exact path=\"/about/:id\" component={About} />\n              <Route exact path=\"/test\" component={Test} />\n              <Route component={NotFound} />\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n}\nexport default App;\n//Earlier one <Contact name=\"John Doe\" email=\"jdoe@gmail.com\" phone=\"555-555-5555\" />\n//Earlier one <Contact name=\"Karen Dev\" email=\"kd@gmail.com\" phone=\"333-355-3355\" />\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}